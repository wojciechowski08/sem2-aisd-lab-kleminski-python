from Graph import Graph

test = Graph(False, True)

test.addVertex(0)
test.viewVerticles()
print(test.adjacencyList)
test.addVertex(1)
test.addVertex(2)
test.viewVerticles()
test.viewEdges()
test.addEdge(0,1)
test.viewEdges()
test.addEdge(0,2)
test.addEdge(1,2)
test.viewEdges()
test.addEdge(2,3)
test.viewEdges()
print(test.adjacencyList)
test.removeEdge(0,1)
print(test.adjacencyList)
test.viewEdges()
print(test.weights)
test.removeVertex(2)
print(test.adjacencyList)
test.viewEdges()
print(test.weights)
test.addVertex(3)
test.addVertex(4)
test.addVertex(5)
test.addVertex(6)
test.viewVerticles()
test.viewEdges()
test.addEdge(0,3)
test.addEdge(2,4)
test.addEdge(5,1)
test.viewEdges()
test.size()
test.order()
test.addVertex(7)
test.addVertex(8)
test.viewVerticles()
test.viewEdges()
test.removeEdge(0,3)
test.removeEdge(1,5)
test.removeEdge(2,4)
test.viewEdges()
test.addEdge(0,1)
test.addEdge(1,2)
test.addEdge(1,4)
test.addEdge(2,3)
test.addEdge(2,7)
test.addEdge(3,4)
test.addEdge(3,5)
test.addEdge(3,6)
test.addEdge(5,6)
test.addEdge(6,7)
test.addEdge(2,6)
print(test.findShortestPath(1,7))
print(test.adjacencyList)
test.removeEdge(3,4)
print(test.adjacencyList)
test.degree(6)
test.setEdgeWeight(5,6,27)
print(test.weights)
test.viewEdges()
test.viewNeighbours(2)
test.order()
test.size()
test.addEdge(5, 9)
test.setEdgeWeight(1, 4, 6)
test.setEdgeWeight(2, 6, 3)
test.setEdgeWeight(0, 1, 2)
test.setEdgeWeight(3, 5, 17)
test.setEdgeWeight(2, 1, 4)
test.viewEdges()
print(test.findShortestPath(1,7))
test.degree(3)
# print(test.findMinSpanningTree())
test.viewVerticles()
test.viewEdges()
test.addEdge(2,6,5)
test.addEdge(0,8,13)
test.addEdge(7,8,20)
#print(test.findMinSpanningTree())

t = Graph(False, True)
t.addVertex(1)
t.addVertex(2)
t.addVertex(3)
t.addVertex(4)
t.addVertex(5)
t.addEdge(1,2,5)
t.addEdge(1,3,16)
t.addEdge(1,4,4)
t.addEdge(1,5,13)
t.addEdge(2,3,8)
t.addEdge(2,5,40)
t.addEdge(3,4,20)
t.addEdge(4,6,2)
t.viewVerticles()
t.viewEdges()
print(t.findMinSpanningTree())


